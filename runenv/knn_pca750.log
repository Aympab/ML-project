Loading data...
Fitting model...
Fitting 10 folds for each of 30 candidates, totalling 300 fits
[CV 1/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.869 total time= 6.4min
[CV 1/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 1/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 1/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.869 total time= 6.4min
[CV 1/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 1/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 1/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.869 total time= 6.4min
[CV 1/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 1/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.885 total time= 6.2min
[CV 1/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.878 total time= 6.4min
[CV 1/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.862 total time= 6.1min
[CV 1/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.869 total time= 6.0min
[CV 7/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.869 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 3/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 5/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.882 total time= 6.3min
[CV 4/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.876 total time= 6.4min
[CV 4/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.889 total time= 6.0min
[CV 4/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.889 total time= 6.3min
[CV 4/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.880 total time= 6.4min
[CV 4/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.864 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.876 total time= 6.4min
[CV 4/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.889 total time= 6.0min
[CV 3/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 3/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.860 total time= 6.1min
[CV 3/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.872 total time= 6.0min
[CV 3/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.860 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.862 total time= 6.4min
[CV 5/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.882 total time= 6.0min
[CV 3/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 3/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 3/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 3/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 3/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.860 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 3/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 4/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.889 total time= 6.3min
[CV 4/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.880 total time= 6.4min
[CV 4/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.864 total time= 6.1min
[CV 4/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.876 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.875 total time= 6.4min
[CV 6/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.877 total time= 6.0min
[CV 6/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.877 total time= 6.3min
[CV 6/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.862 total time= 6.4min
[CV 6/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.877 total time= 6.0min
[CV 5/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.882 total time= 6.3min
[CV 5/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.859 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.873 total time= 6.4min
[CV 5/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.882 total time= 6.0min
[CV 5/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.882 total time= 6.3min
[CV 5/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.859 total time= 6.1min
[CV 5/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.873 total time= 6.0min
[CV 6/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.854 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.873 total time= 6.4min
[CV 2/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.879 total time= 6.0min
[CV 2/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.879 total time= 6.3min
[CV 2/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.871 total time= 6.4min
[CV 2/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.879 total time= 6.0min
[CV 2/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.879 total time= 6.3min
[CV 2/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.866 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.871 total time= 6.4min
[CV 2/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.879 total time= 6.0min
[CV 2/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.879 total time= 6.3min
[CV 2/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.866 total time= 6.2min
[CV 2/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.871 total time= 6.1min
[CV 9/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.880 total time= 6.0min
[CV 2/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.879 total time= 6.3min
[CV 3/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.860 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.878 total time= 6.4min
[CV 8/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.876 total time= 6.0min
[CV 7/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.887 total time= 6.3min
[CV 7/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.884 total time= 6.4min
[CV 6/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.854 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.862 total time= 6.4min
[CV 6/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.877 total time= 6.0min
[CV 6/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.877 total time= 6.3min
[CV 6/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.870 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.854 total time= 6.1min
[CV 7/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.879 total time= 6.0min
[CV 3/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.880 total time= 6.3min
[CV 7/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.884 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.859 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.880 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.864 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.873 total time= 6.4min
[CV 3/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 7/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.887 total time= 6.3min
[CV 5/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.864 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.873 total time= 6.4min
[CV 4/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.889 total time= 5.7min
[CV 1/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.885 total time= 6.0min
[CV 6/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.862 total time= 6.1min
[CV 6/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.877 total time= 6.0min
[CV 8/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.876 total time= 6.3min
[CV 9/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.873 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.858 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 8/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.876 total time= 6.0min
[CV 8/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.876 total time= 6.3min
[CV 3/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.866 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.871 total time= 6.4min
[CV 5/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.882 total time= 5.7min
[CV 2/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.879 total time= 6.0min
[CV 8/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.872 total time= 6.1min
[CV 7/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.887 total time= 6.0min
[CV 3/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 2/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.866 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.870 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.869 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.862 total time= 6.4min
[CV 6/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.877 total time= 6.0min
[CV 4/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.889 total time= 6.3min
[CV 4/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.880 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.860 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 3/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.885 total time= 5.8min
[CV 4/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.889 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.878 total time= 6.1min
[CV 2/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.866 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 8/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.876 total time= 6.0min
[CV 8/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.876 total time= 6.3min
[CV 9/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.875 total time= 6.4min
[CV 10/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.886 total time= 6.0min
[CV 8/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.876 total time= 6.3min
[CV 8/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.873 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.858 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.859 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.876 total time= 6.4min
[CV 6/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.877 total time= 5.7min
[CV 3/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.885 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=3, weights=distance;, score=0.875 total time= 6.1min
[CV 8/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.876 total time= 6.0min
[CV 7/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.887 total time= 6.3min
[CV 5/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.864 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.875 total time= 6.5min
[CV 5/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.859 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.876 total time= 6.4min
[CV 5/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.882 total time= 6.0min
[CV 6/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.877 total time= 6.3min
[CV 7/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.884 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.869 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.862 total time= 6.4min
[CV 9/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.880 total time= 5.7min
[CV 5/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.882 total time= 6.0min
[CV 1/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.878 total time= 6.1min
[CV 2/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.879 total time= 6.0min
[CV 4/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.889 total time= 6.3min
[CV 8/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.873 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.869 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.866 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 2/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.879 total time= 6.0min
[CV 2/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.879 total time= 6.3min
[CV 7/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.879 total time= 6.4min
[CV 7/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.887 total time= 6.0min
[CV 7/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.887 total time= 6.3min
[CV 7/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.884 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.869 total time= 6.1min
[CV 3/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.875 total time= 6.1min
[CV 10/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.868 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.879 total time= 6.4min
[CV 4/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.889 total time= 6.0min
[CV 4/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.889 total time= 6.3min
[CV 5/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.873 total time= 6.4min
[CV 5/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.882 total time= 6.0min
[CV 6/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.877 total time= 6.3min
[CV 6/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.870 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.869 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 8/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.876 total time= 6.0min
[CV 8/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.876 total time= 6.3min
[CV 9/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.876 total time= 6.0min
[CV 5/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.875 total time= 6.1min
[CV 8/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.858 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.871 total time= 6.4min
[CV 9/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.880 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.880 total time= 6.3min
[CV 1/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.860 total time= 6.5min
[CV 2/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.871 total time= 6.4min
[CV 7/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.887 total time= 6.0min
[CV 5/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.882 total time= 6.3min
[CV 6/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.870 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.858 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 8/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.876 total time= 5.8min
[CV 6/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.877 total time= 6.0min
[CV 2/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.879 total time= 6.1min
[CV 4/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.889 total time= 6.0min
[CV 6/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.877 total time= 6.3min
[CV 6/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.870 total time= 6.5min
[CV 8/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.858 total time= 6.5min
[CV 3/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.875 total time= 6.4min
[CV 1/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.869 total time= 6.4min
[CV 1/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.868 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.879 total time= 6.4min
[CV 2/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.879 total time= 5.7min
[CV 8/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.858 total time= 6.1min
[CV 6/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.870 total time= 6.1min
[CV 10/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.886 total time= 6.0min
[CV 1/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 1/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.879 total time= 6.4min
[CV 7/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.887 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.880 total time= 6.3min
[CV 9/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.878 total time= 6.4min
[CV 9/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.880 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.880 total time= 6.3min
[CV 8/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.873 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.887 total time= 6.0min
[CV 4/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.880 total time= 6.1min
[CV 5/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.882 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.886 total time= 6.3min
[CV 10/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.868 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.879 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.875 total time= 6.4min
[CV 9/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.880 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.880 total time= 6.3min
[CV 8/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.873 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.854 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.875 total time= 6.4min
[CV 7/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.887 total time= 5.7min
[CV 10/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.868 total time= 6.2min
[CV 8/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.873 total time= 6.1min
[CV 1/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=1, weights=distance;, score=0.885 total time= 6.0min
[CV 5/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=2, weights=distance;, score=0.882 total time= 6.3min
[CV 4/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=4, weights=distance;, score=0.880 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=5, weights=distance;, score=0.854 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.884 total time= 6.5min
[CV 6/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.854 total time= 6.5min
[CV 7/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.879 total time= 6.4min
[CV 4/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.889 total time= 6.0min
[CV 3/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.885 total time= 6.3min
[CV 1/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.862 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.869 total time= 6.4min
[CV 1/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.885 total time= 5.7min
[CV 9/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=5, weights=distance;, score=0.862 total time= 6.1min
[CV 7/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.884 total time= 6.1min
[CV 5/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.859 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.878 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.886 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.886 total time= 6.4min
[CV 10/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=4, weights=distance;, score=0.878 total time= 6.6min
[CV 10/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=5, weights=distance;, score=0.868 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=3, weights=distance;, score=0.878 total time= 6.4min
[CV 10/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=1, weights=distance;, score=0.886 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.886 total time= 6.3min
[CV 10/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=5, weights=distance;, score=0.868 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=3, weights=distance;, score=0.878 total time= 6.4min
[CV 10/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=1, weights=distance;, score=0.886 total time= 5.7min
[CV 10/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.886 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.878 total time= 6.0min
[CV 4/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=5, weights=distance;, score=0.864 total time= 6.5min
[CV 4/10] END algorithm=ball_tree, leaf_size=10, n_neighbors=3, weights=distance;, score=0.876 total time= 6.4min
[CV 7/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=1, weights=distance;, score=0.887 total time= 6.0min
[CV 7/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=2, weights=distance;, score=0.887 total time= 6.3min
[CV 8/10] END algorithm=ball_tree, leaf_size=11, n_neighbors=3, weights=distance;, score=0.872 total time= 6.4min
[CV 9/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=1, weights=distance;, score=0.880 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=2, weights=distance;, score=0.886 total time= 6.3min
[CV 10/10] END algorithm=ball_tree, leaf_size=9, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 1/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=2, weights=distance;, score=0.885 total time= 6.4min
[CV 9/10] END algorithm=ball_tree, leaf_size=8, n_neighbors=3, weights=distance;, score=0.875 total time= 6.5min
[CV 10/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=1, weights=distance;, score=0.886 total time= 6.0min
[CV 10/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=2, weights=distance;, score=0.886 total time= 6.4min
[CV 10/10] END algorithm=ball_tree, leaf_size=7, n_neighbors=4, weights=distance;, score=0.878 total time= 6.5min
[CV 9/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=2, weights=distance;, score=0.880 total time= 6.0min
[CV 9/10] END algorithm=ball_tree, leaf_size=12, n_neighbors=4, weights=distance;, score=0.879 total time= 6.2min
score :  1.0
{'algorithm': 'ball_tree', 'leaf_size': 10, 'n_neighbors': 1, 'weights': 'distance'}
Predicting...
End computation
